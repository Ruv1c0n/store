syntax = "proto3";

package order;

option go_package = "./;proto";

// Структура заказа
message Order {
    int32 order_id = 1;          // Идентификатор заказа
    repeated OrderItem items = 2; // Список товаров в заказе
    string order_date = 3;       // Дата и время заказа
    string status = 4;           // Статус заказа (например, "в обработке")
    int32 customer_id = 5;       // Идентификатор клиента
}

message OrderItem {
    int32 product_id = 1;  // Идентификатор продукта
    int32 quantity = 2;  // Количество товара
}

// Запрос на создание нового заказа
message CreateOrderRequest {
    int32 customer_id = 1;  // Идентификатор клиента
    repeated OrderItem items = 2;  // Список товаров в заказе
}

// Ответ на создание нового заказа
message CreateOrderResponse {
    int32 order_id = 1;  // Идентификатор созданного заказа
}

// Запрос на получение информации о заказе по его ID
message GetOrderByIDRequest {
    int32 order_id = 1;          // Идентификатор заказа
}

// Ответ на запрос получения заказа
message GetOrderByIDResponse {
    Order order = 1;             // Информация о заказе
}

// Запрос на получение всех заказов
message GetAllOrdersRequest {}

// Ответ на запрос получения всех заказов
message GetAllOrdersResponse {
    repeated Order orders = 1;   // Список всех заказов
}

// Запрос на обновление статуса заказа
message UpdateOrderRequest {
    int32 order_id = 1;    // Идентификатор заказа
    string status = 2;     // Новый статус заказа
}

// Ответ на обновление заказа
message UpdateOrderResponse {
    bool success = 1;            // Успешность операции
}

// Запрос на удаление заказа
message DeleteOrderRequest {
    int32 order_id = 1;          // Идентификатор заказа
}

// Ответ на удаление заказа
message DeleteOrderResponse {
    bool success = 1;            // Успешность операции
}

// Сервис для работы с заказами
service OrderService {
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
    rpc GetOrderByID(GetOrderByIDRequest) returns (GetOrderByIDResponse);
    rpc GetAllOrders(GetAllOrdersRequest) returns (GetAllOrdersResponse);
    rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse);
    rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse);
}